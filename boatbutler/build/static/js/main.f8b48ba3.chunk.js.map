{"version":3,"sources":["utils/definitions.ts","context/UserContext.tsx","components/CustomInput.tsx","components/UserPanel.tsx","components/Login.tsx","components/NavBar.tsx","components/DashboardHome.tsx","components/JobAds.tsx","components/Proposals.tsx","components/Reviews.tsx","components/CreateProposal.tsx","components/AppStateSnackbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MediaType","JobCategory","JobSubCategory","BoatType","AppStateType","CustomInput","makeStyles","theme","root","shoppingList","marginRight","marginLeft","paddingBottom","marginTop","defaultList","border","media","height","paddingTop","nested","paddingLeft","spacing","formControl","margin","minWidth","selectEmpty","props","labelText","id","handleChange","type","value","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","BOAT_BUTLER_API","DashboardMenuListValue","UserContext","createContext","withRouter","useState","window","localStorage","getItem","token","setToken","loggedIn","setLoggedIn","jobsWithBoatDetails","setJobsWithBoatDetails","selectedJobAdId","setSelectedJobAdId","proposals","setProposals","appState","setAppState","useEffect","setItem","logout","removeItem","fetchAuthToken","email","password","a","Error","axios","post","response","status","tokenBody","data","newAppState","SUCCESS","message","ERROR","postProposal","proposalDetails","headers","Authorization","fetchJobsWithBoatDetails","get","jobsRes","fetchProposals","Provider","test","selectJobAdId","jobId","resetAppState","undefined","children","useStyles","width","backgroundImage","backgroundSize","backgroundRepeat","display","flexDirection","background","alignItems","paper","form","maxWidth","padding","title","color","textAlign","logoDiv","backgroundColor","justifyContent","loginButton","formLabel","formGroup","terms","Login","classes","useContext","setEmail","setPassword","isValidInput","setIsValidInput","history","push","onClickLogin","className","Paper","elevation","style","fontStyle","fontSize","fontWeight","Typography","variant","event","target","Checkbox","name","Button","disabled","onClick","Link","flexGrow","menuButton","NavBar","onClickMenu","AppBar","position","Toolbar","IconButton","edge","aria-label","DashboardHome","marginBottom","container","table","tableCellTitle","card","cardTitle","list","listItem","borderBottom","listItemMainText","listItemSecondaryText","console","log","Grid","item","xs","md","lg","map","jobWithBoatDetails","List","dense","ListItem","ListItemText","primary","boat","boat_type","address","job","due_date","due_time","is_emergency","category","subcategory","description","user_contact_details","justify","textTransform","alignContent","Card","CardMedia","image","job_media","url","_id","match","path","Proposals","Reviews","initialProposalDetails","date","time","text","fixedPrice","price","setProposalDetails","validProposalDetails","setValidProposalDetails","Number","isNaN","handleChangeFixedPrice","handleChangeProposalDetails","e","preventDefault","parseInt","handleClickSubmitProposal","filter","jobWithDetails","TextField","label","error","placeholder","InputLabelProps","shrink","multiline","rows","FormControlLabel","control","checked","menuList","openMenuClass","closedMenuClass","menuLink","textDecoration","selectedListItem","unselectedListItem","navButtonLabel","openMenu","setOpenMenu","jobads","selectedMenuItem","setSelectedMenuItem","matchPath","location","pathname","dashboard","reviews","prev","to","borderRadius","exact","component","JobAds","CreateProposal","AppStateSnackbar","open","setOpen","Fragment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","Alert","severity","App","UserPanel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8b48ba3.chunk.js","sourcesContent":["export const BOAT_BUTLER_API = process.env.NODE_ENV === \"production\" ? \"heroku\" : \"http://localhost:3001\";\n\n\nexport enum MediaType{\n    IMAGE = \"IMAGE\",\n    VIDEO = \"VIDEO\"\n}\nexport interface JobMediaInterface{\n    type: MediaType;\n    url: string;\n}\nexport enum JobCategory{\n    A = \"A\",\n    B = \"B\"\n}\nexport enum JobSubCategory{\n    SUB_A = \"SUB_A\",\n    SUB_B = \"SUB_B\"\n}\nexport interface JobInterface{\n    _id: string;\n    allow_contact_by_app: boolean,\n    category: JobCategory,\n    subcategory: JobSubCategory,\n    is_emergency: boolean;\n    title: string;\n    description: string;\n    lat: number;\n    lng: number;\n    price: number;\n    due_date: string;\n    due_time: string;\n    is_done: boolean;\n    user_id: string; \n    awarded_company_id: string;\n    boat_id: string;\n    job_media: [JobMediaInterface];\n   \n} \nexport interface JobWithBoatDetails{\n    job: JobInterface;\n    boat: BoatInterface;\n    user_contact_details: string;\n}\nexport interface BoatInterface{\n    _id: string;\n    name: string;\n    year: number;\n    boat_type: BoatType;\n    user_id: string;\n    address: string;\n    city: string;\n    description: string;\n}\nexport enum BoatType{\n    SPEED_BOAT = \"SPEED_BOAT\",\n    SAIL_BOAT = \"SAIL_BOAT\",\n    YACHT = \"YACHT\"\n}\n","import React, {\n  createContext,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { BOAT_BUTLER_API, JobWithBoatDetails } from \"../utils/definitions\";\n\nexport enum AppStateType {\n  ERROR = \"ERROR\",\n  SUCCESS = \"SUCCESS\"\n}\nexport interface AppState {\n  message: string;\n  type: AppStateType;\n}\ninterface TokenBody {\n  token: string;\n}\nexport interface ProposalDetails {\n  jobId: string;\n  date: string;\n  time: string;\n  text: string;\n  price: number;\n  fixedPrice: boolean;\n}\nexport interface Proposal {\n  id: string;\n  status: string;\n  date: string;\n  time: string;\n  description: string;\n  negotiable: boolean;\n  job_id: string;\n  company_id: string;\n  price: number;\n}\ntype ContextProps = {\n  test: string,\n  loggedIn: boolean,\n  logout: () => void;\n  fetchAuthToken: (email: string, password: string) => Promise<void>;\n  fetchJobsWithBoatDetails: () => Promise<void>;\n  selectedJobAdId: string | undefined;\n  selectJobAdId: (jobId: string) => void;\n  jobsWithBoatDetails: JobWithBoatDetails[] | undefined;\n  postProposal: (proposalDetails: ProposalDetails) => Promise<void>;\n  fetchProposals: () => void;\n  proposals: Proposal[] | undefined,\n  appState: AppState | undefined\n  resetAppState: () => void;\n\n}\nexport const UserContext = createContext({} as ContextProps);\n\nconst UserProvider = (props: any) => {\n\n  const [token, setToken] = useState(() => (window.localStorage.getItem(\"token\") ? window.localStorage.getItem(\"token\") : null));\n  const [loggedIn, setLoggedIn] = useState(() => {\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  const [jobsWithBoatDetails, setJobsWithBoatDetails] = useState<JobWithBoatDetails[]>();\n  const [selectedJobAdId, setSelectedJobAdId] = useState<string | undefined>();\n  const [proposals, setProposals] = useState<Proposal[] | undefined>();\n  const [appState, setAppState] = useState<AppState | undefined>();\n\n  useEffect(() => {\n    if (token) {\n      setLoggedIn(true);\n      window.localStorage.setItem(\"token\", token);\n    } else {\n      setLoggedIn(false);\n    }\n  });\n\n  const logout = () => {\n    window.localStorage.removeItem(\"token\");\n    setToken(null);\n  }\n\n  const fetchAuthToken = async (email: string, password: string) => {\n    try {\n      if (!email || !password) {\n        throw new Error(\"Invalid inputs\")\n      }\n      const response = await axios.post(`${BOAT_BUTLER_API}/api/login`, {\n        email: email,\n        password: password\n      });\n      if (response.status === 200) {\n        const tokenBody: TokenBody = response.data;\n        if (tokenBody) {\n          setToken(tokenBody.token);\n          const newAppState: AppState = {\n            type: AppStateType.SUCCESS,\n            message: \"Logged in\"\n          }\n          setAppState(newAppState);\n\n        }\n\n      }\n    } catch (error) {\n      const newAppState: AppState = {\n        type: AppStateType.ERROR,\n        message: \"Login Error\"\n      }\n      setAppState(newAppState);\n    }\n  };\n\n  const postProposal = async (proposalDetails: ProposalDetails) => {\n    try {\n      const response = await axios.post(`${BOAT_BUTLER_API}/api/company/proposals/new`, proposalDetails, {\n        headers: { Authorization: \"bearer \" + token },\n      });\n      if (response.status === 200) {\n        const newAppState: AppState = {\n          type: AppStateType.SUCCESS,\n          message: \"Proposal created\"\n        }\n        setAppState(newAppState);\n      }\n\n    } catch (error) {\n      if (error && error.response && error.response.status === 401) {\n        logout();\n      }\n      const newAppState: AppState = {\n        type: AppStateType.ERROR,\n        message: \"Fetch Error\"\n      }\n      setAppState(newAppState);\n    }\n  }\n\n  const fetchJobsWithBoatDetails = async () => {\n    try {\n      const response = await axios.get(`${BOAT_BUTLER_API}/api/company/jobs`, {\n        headers: { Authorization: \"bearer \" + token }\n      });\n      if (response.status === 200) {\n        const jobsRes: JobWithBoatDetails[] = response.data;\n        if (jobsRes) {\n          setJobsWithBoatDetails(jobsRes);\n        };\n      }\n\n    } catch (error) {\n      if (error && error.response && error.response.status === 401) {\n        logout();\n      }\n      const newAppState: AppState = {\n        type: AppStateType.ERROR,\n        message: \"Fetch Error\"\n      }\n      setAppState(newAppState);\n    }\n  }\n  const fetchProposals = async () => {\n    try {\n      const response = await axios.get(`${BOAT_BUTLER_API}/api/company/proposals`, {\n        headers: { Authorization: \"bearer \" + token }\n      });\n      if (response.status === 200) {\n        const proposals: Proposal[] = response.data;\n        if (proposals) {\n          setProposals(proposals)\n        };\n      }\n\n    } catch (error) {\n      if (error && error.response && error.response.status === 401) {\n        logout();\n      }\n      const newAppState: AppState = {\n        type: AppStateType.ERROR,\n        message: \"Fetch Error\"\n      }\n      setAppState(newAppState);\n    }\n  }\n\n  const selectJobAdId = (jobId: string) => {\n    if (jobId) {\n      setSelectedJobAdId(jobId);\n    }\n  }\n\n  const resetAppState = () => {\n    setAppState(undefined);\n  }\n\n  return (\n    <UserContext.Provider value={{\n      test: \"testinggg\",\n      loggedIn,\n      fetchAuthToken,\n      logout,\n      jobsWithBoatDetails,\n      fetchJobsWithBoatDetails,\n      selectedJobAdId,\n      selectJobAdId,\n      postProposal,\n      proposals,\n      fetchProposals,\n      appState,\n      resetAppState\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default withRouter(UserProvider);","import React, {useEffect, useState} from 'react';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      // maxWidth: 345,\n    },\n    shoppingList: {\n      marginRight: \"2%\",\n      marginLeft: \"2%\",\n      paddingBottom: \"6%\",\n      marginTop: \"10%\",\n    },\n    defaultList: {\n      border: \"1px solid black\",\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    formControl: {\n      margin: theme.spacing(5),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\ninterface CustomInputProps{\n    labelText: string;\n    id: string;\n    type: string;\n    value: string;\n    handleChange: (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void;\n}\n\nexport const CustomInput = (props: CustomInputProps) => {\n    const {labelText, id, handleChange, type, value} = props;\n\n\n    return (\n        <FormControl fullWidth >\n        {labelText && (\n          <InputLabel\n            htmlFor={id}\n          >\n            {labelText}\n          </InputLabel>\n        )}\n      \n        <Input\n          value={value}\n          id={id}\n          onChange={handleChange}\n        //   {...inputProps}\n          type={type}\n        />\n      </FormControl>\n    )\n}\n\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    RouteComponentProps,\n    Link,\n    Switch,\n    withRouter\n} from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport Navbar from \"./NavBar\";\nimport DashboardHome from \"./DashboardHome\";\nimport JobAds from \"./JobAds\";\nimport Proposals from \"./Proposals\";\nimport Reviews from \"./Reviews\";\nimport CreateProposal from './CreateProposal';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    menuList: {\n        padding: \"0\",\n        backgroundColor: \"rgb(29,43,71)\"\n    },\n    openMenuClass: {\n        backgroundColor: \"rgb(29,43,71)\",\n        height: \"300vh\"\n    },\n    closedMenuClass: {\n        height: \"100vh\"\n    },\n    menuLink: {\n        textDecoration: \"none\",\n        color: \"black\"\n    },\n    selectedListItem: {\n        backgroundColor: \"rgb(151, 178, 206) !important\",\n        color: \"rgb(29,43,71)\"\n    },\n    unselectedListItem: {\n        color: \"rgb(151, 178, 206)\"\n\n    },\n    navButtonLabel: {\n        justifyContent: \"left\",\n    }\n\n}));\n\nenum DashboardMenuListValue {\n    dashboard = \"dashboard\",\n    jobads = \"jobads\",\n    proposals = \"proposals\",\n    reviews = \"reviews\"\n}\n\n\nconst UserPanel = (props: RouteComponentProps) => {\n    const classes = useStyles();\n    const { loggedIn } = useContext(UserContext);\n\n    const [openMenu, setOpenMenu] = useState(true);\n    const [selectedMenuItem, setSelectedMenuItem] = useState(DashboardMenuListValue.jobads);\n\n    useEffect(() => {\n        if (props.match) {\n            const matchPath = props.match.path;\n            if (matchPath) {\n                switch (props.location.pathname) {\n                    case `${matchPath}/${DashboardMenuListValue.jobads}`:\n                        setSelectedMenuItem(DashboardMenuListValue.jobads);\n                        break;\n                    case `${matchPath}/${DashboardMenuListValue.proposals}`:\n                        setSelectedMenuItem(DashboardMenuListValue.proposals);\n                        break;\n                    case `${matchPath}/${DashboardMenuListValue.dashboard}`:\n                        setSelectedMenuItem(DashboardMenuListValue.dashboard);\n                        break;\n                    case `${matchPath}/${DashboardMenuListValue.proposals}`:\n                        setSelectedMenuItem(DashboardMenuListValue.proposals);\n                        break;\n                    case `${matchPath}/${DashboardMenuListValue.reviews}`:\n                        setSelectedMenuItem(DashboardMenuListValue.reviews);\n                        break;\n                    default:\n                        setSelectedMenuItem(DashboardMenuListValue.jobads)\n                }\n            }\n\n        }\n    }, [props]);\n\n    useEffect(() => {\n        if (!loggedIn) {\n            props.history.push(\"/login\");\n        }\n    }, [loggedIn]);\n\n    const handleClickToggleMenu = () => {\n        setOpenMenu(prev => !prev)\n    }\n\n    return (\n        <div>\n            <Navbar onClickMenu={handleClickToggleMenu} />\n            <Grid container>\n                <Grid item xs={3} md={3} lg={3} className={openMenu ? classes.openMenuClass : classes.closedMenuClass}>\n\n                    {openMenu && (<List className={classes.menuList}>\n                        <Link\n                            to={`/user/${DashboardMenuListValue.dashboard}`}\n                            className={classes.menuLink}\n                        >\n                            <Button style={{ width: \"100%\", borderRadius: \"0\", textTransform: \"none\" }} classes={{ label: classes.navButtonLabel }} className={selectedMenuItem === DashboardMenuListValue.dashboard ? classes.selectedListItem : classes.unselectedListItem}>\n                                Dashboard\n                            </Button>\n\n                        </Link>\n                        <Link\n                            to={`/user/${DashboardMenuListValue.jobads}`}\n                            className={classes.menuLink}\n                        >\n                            <Button style={{ width: \"100%\", borderRadius: \"0\", textTransform: \"none\" }} classes={{ label: classes.navButtonLabel }} className={selectedMenuItem === DashboardMenuListValue.jobads ? classes.selectedListItem : classes.unselectedListItem}>\n                                Job Ads\n                            </Button>\n\n                        </Link>\n                        <Link\n                            to={`/user/${DashboardMenuListValue.proposals}`}\n                            className={classes.menuLink}\n                        >\n                            <Button style={{ width: \"100%\", borderRadius: \"0\", textTransform: \"none\" }} classes={{ label: classes.navButtonLabel }} className={selectedMenuItem === DashboardMenuListValue.proposals ? classes.selectedListItem : classes.unselectedListItem}>\n                                Proposals\n                            </Button>\n\n                        </Link>\n                        <Link\n                            to={`/user/${DashboardMenuListValue.reviews}`}\n                            className={classes.menuLink}\n                        >\n                            <Button style={{ width: \"100%\", borderRadius: \"0\", textTransform: \"none\" }} classes={{ label: classes.navButtonLabel }} className={selectedMenuItem === DashboardMenuListValue.reviews ? classes.selectedListItem : classes.unselectedListItem}>\n                                Reviews\n                            </Button>\n\n                        </Link>\n                    </List>)}\n\n                </Grid>\n                <Grid item xs={9} md={9} lg={9}>\n                    <Switch>\n                        <Route\n                            exact\n                            path={`${props.match.path}/${DashboardMenuListValue.dashboard}`}\n                            component={DashboardHome}\n                        />\n                        <Route\n                            exact\n                            path={`${props.match.path}/${DashboardMenuListValue.jobads}`}\n                            component={JobAds}\n                        />\n                        <Route\n                            exact\n                            path={`${props.match.path}/${DashboardMenuListValue.proposals}`}\n                            component={Proposals}\n                        />\n                        <Route\n                            exact\n                            path={`${props.match.path}/${DashboardMenuListValue.reviews}`}\n                            component={Reviews}\n                        />\n                        <Route\n                            exact\n                            path={`${props.match.path}/${DashboardMenuListValue.jobads}/createproposal`}\n                            component={CreateProposal}\n                        />\n                    </Switch>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default withRouter(UserPanel)","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CustomInput } from \"./CustomInput\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    RouteComponentProps\n  } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: `url(\"https://images.unsplash.com/photo-1510525009512-ad7fc13eefab?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=668&q=80\")`,\n        backgroundSize: \"100% 100%\",\n        backgroundRepeat: \"no-repeat\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"white\",\n        alignItems: \"center\"\n    },\n    paper: {\n        // maxWidth: \"330px\",\n        margin: \"auto\"\n    },\n    form: {\n        maxWidth: \"330px\",\n        margin: \" 0 auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"white\",\n        padding: \"20px\",\n        marginTop: \"30px\"\n    },\n    title: {\n        color: \"gray\",\n        marginTop: \"30px\",\n        textAlign: \"center\"\n    },\n    logoDiv: {\n        backgroundColor: \"rgb(29, 43, 71)\",\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    loginButton: {\n        marginTop: \"50px\",\n        backgroundColor: \"rgb(240, 203, 103)\",\n        color: \"white\"\n    },\n    formLabel: {\n\n    },\n    formGroup: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n    },\n    terms: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"20px\" \n    }\n}));\n\n\nexport const Login = (props: RouteComponentProps) => {\n    const classes = useStyles();\n    const { test, loggedIn, fetchAuthToken } = useContext(UserContext);\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isValidInput, setIsValidInput] = useState(false);\n\n    useEffect(() => {\n        if(loggedIn){\n            props.history.push(\"/user/jobads\");\n        }\n    }, [loggedIn]);\n\n\n    useEffect(() => {\n        if(!email || !password){\n            setIsValidInput(false);\n        } else {\n            setIsValidInput(true);\n        }\n    }, [email, password]);\n\n\n    const handleChangeEmail = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        setEmail(event.target.value);\n    }\n    const handleChangePassword = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        setPassword(event.target.value);\n    }\n    const onClickLogin = async() => {\n        await fetchAuthToken(email, password);\n    }\n\n\n    return (\n        <div className={classes.root}>  \n        \n        <Paper elevation={2} className={classes.paper}>\n            <div className={classes.logoDiv}>\n                <p style={{color: \"white\", fontStyle:\"italic\", fontSize: \"24px\", fontWeight: 500}}>NJORD</p>\n            </div>\n            <Typography variant=\"h4\" className={classes.title}>\n                Company Login\n            </Typography>\n            <form className={classes.form}>\n                <CustomInput labelText=\"email\" id=\"email\" type=\"text\" handleChange={handleChangeEmail} value={email} />\n                <CustomInput labelText=\"password\" id=\"password\" type=\"password\" handleChange={handleChangePassword} value={password}/>\n                <div className={classes.formGroup}>\n                    <Checkbox\n                        name=\"test\"\n                    />\n                    <p>Remember me</p>\n                    <p style={{ marginLeft: \"20px\" }}>Forgot password?</p>\n                </div>\n                <Button type=\"button\" color=\"primary\" className={classes.loginButton} disabled={!isValidInput} onClick={onClickLogin}>\n                    Sign in\n                </Button>\n                <div className={classes.terms}>\n                    <Link>Terms & Conditions</Link>\n                </div>\n            </form>\n        </Paper>\n\n        </div>\n    )\n}\n\n\n","import React, { useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from '@material-ui/core/Typography';\nimport { UserContext } from \"../context/UserContext\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\ninterface NavBarProps {\n  onClickMenu?: () => void;\n}\n\nconst NavBar = (props: NavBarProps) => {\n  const classes = useStyles();\n  const { logout } = useContext(UserContext);\n  const { onClickMenu } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={onClickMenu}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            NJORD\n          </Typography>\n          <Button color=\"inherit\" onClick={() => logout()}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default NavBar;","import React from \"react\";\n\nconst DashboardHome = () => {\n    return (\n        <div>\n            DASHBOARD HOME\n        </div>\n    )\n};\n\nexport default DashboardHome;","import React, { useEffect, useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from '@material-ui/core/ListItem';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BrowserRouter as Router,\n    RouteComponentProps,\n    withRouter\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root:{\n        marginTop: \"20px\",\n    },\n    title: {\n        marginBottom: \"20px\",\n        color: \"gray\"\n    },\n    container:{\n        marginLeft: \"30px\", \n    },\n    table: {\n    },\n    tableCellTitle:{\n        color: \"gray\"\n    },\n    card: {\n\n    },\n    media: {\n        height: 300,\n        margin: 0,\n        padding: 0 \n    },\n    cardTitle: {\n        // marginLeft: \"35px\"\n        color: \"gray\"\n    },\n    list: {\n        paddingLeft: \"20px\",\n    },\n    listItem: {\n        borderBottom: \"1px solid lightgray\",\n        \n    },\n    listItemMainText: {\n        color: \"gray\"\n    },\n    listItemSecondaryText:{\n\n    }\n});\n\nconst JobAds = (props: RouteComponentProps) => {\n    const classes = useStyles();\n    const { jobsWithBoatDetails, fetchJobsWithBoatDetails, selectJobAdId, selectedJobAdId } = useContext(UserContext);\n\n    useEffect(() => {\n        // fetch on first render\n        fetchJobsWithBoatDetails();\n    }, []);\n\n    useEffect(() => {\n        console.log(\"JOBS: \", jobsWithBoatDetails);\n    }, [jobsWithBoatDetails]);\n\n    const onClickMakeProposal = (jobId: string) => {\n            console.log(\"GONNA PROPOSE TO: \", jobId);\n            if(jobId){\n                selectJobAdId(jobId);\n                if(props && props.match && props.match.path){\n                    props.history.push(`${props.match.path}/createproposal`);\n                }\n            }\n    }\n    return (\n        <div className={classes.root}>\n        <Grid container >\n            <Grid item xs={1} md={1} lg={1}></Grid>\n            <Grid item xs={10} md={10} lg={10}>\n                <Grid item xs={12} md={12} lg={12}>\n                        <Typography variant=\"h5\" className={classes.title}>\n                                Job Description\n                        </Typography>\n                 </Grid>\n            {jobsWithBoatDetails && jobsWithBoatDetails.map((jobWithBoatDetails) => (\n                <Grid container style={{marginTop: \"20px\"}}>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper elevation={3}>\n                            <Grid container>\n                                <Grid item xs={5} md={5} lg={5}>\n                                     <List dense aria-label=\"jobadsList\" className={classes.list}>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Boat Name\" className={classes.listItemMainText}/>\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.boat.name} />\n                                                </Grid>\n                                            </Grid>\n  \n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                    <Grid item xs={6} md={6} lg={6} >\n                                                        <ListItemText primary=\"Boat Type\" className={classes.listItemMainText}/>\n                                                    </Grid>\n                                                    <Grid item xs={6} md={6} lg={6} >\n                                                        <ListItemText primary={jobWithBoatDetails.boat.boat_type} />\n                                                    </Grid>\n                                            </Grid>\n                        \n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Boat Location\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.boat.address} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Due Date\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.due_date} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Due Time\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.due_time} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Job Type\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.is_emergency ? \"Emergency\" : \"Normal\"} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Job Category\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.category} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Job Sub Category\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.subcategory} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Job Description\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.job.description} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary=\"Preffered Contact\" className={classes.listItemMainText}/>    \n                                                        </Grid>\n                                                        <Grid item xs={6} md={6} lg={6} >\n                                                            <ListItemText primary={jobWithBoatDetails.user_contact_details} />\n                                                        </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                     </List>\n\n\n\n                                    <Grid container justify=\"center\" style={{marginTop: \"30px\", marginBottom: \"30px\"}}>\n                                         <Button style={{backgroundColor: \"orange\", color: \"white\", marginRight: \"20px\", textTransform: \"none\", height: \"25px\", width: \"135px\"}}>Report User</Button>\n                                    </Grid>\n\n                             \n                                </Grid>\n                                <Grid item xs={1} md={1} lg={1}></Grid>\n                                <Grid item xs={5} md={5} lg={5} >\n                                    <Grid container alignContent=\"center\" alignItems=\"center\">\n                                        <Grid item xs={12} md={12} lg={12}>\n                                            <p className={classes.cardTitle}>\n                                                Images / Videos\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12} md={12} lg={12}>\n                                            <Card className={classes.card}>\n                                                <CardMedia\n                                                    className={classes.media}\n                                                    image={jobWithBoatDetails.job.job_media[0].url}\n                                                    // image={\"https://images.unsplash.com/photo-1511311855362-67f5492671ab?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1650&q=80\"}\n                                                    title=\"Paella dish\"\n                                                />\n                                            </Card>\n\n                                        </Grid>\n                                        <Grid container justify=\"center\" style={{marginTop: \"15%\"}}>\n                                            <Button onClick={() => onClickMakeProposal(jobWithBoatDetails.job._id)} style={{backgroundColor: \"green\", color: \"white\", marginRight: \"20px\", textTransform: \"none\", height: \"25px\", width: \"135px\"}}>\n                                           Make A Proposal\n                                            </Button>\n                                            <Button style={{backgroundColor: \"red\", color: \"white\", marginRight: \"20px\", textTransform: \"none\", height: \"25px\", width: \"135px\"}}>\n                                            Reject\n                                            </Button>\n                                        </Grid>\n\n                                    </Grid>\n\n                                   \n                                </Grid>\n                                <Grid item xs={1} md={1} lg={1}></Grid>\n                            </Grid>\n\n                        </Paper>\n                    </Grid>\n                    </Grid>\n                \n            ))}\n            </Grid>\n            <Grid item xs={1} md={1} lg={1}></Grid>\n            \n            </Grid>\n        </div>\n    )\n};\n\nexport default withRouter(JobAds);","import React, {useEffect, useState, useContext} from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    RouteComponentProps,\n    Link,\n    Switch,\n    withRouter\n} from \"react-router-dom\";\n\n\nconst Proposals = () => {\n    const { proposals, fetchProposals } = useContext(UserContext);\n    useEffect(() => {\n        fetchProposals()\n    }, []);\n\n\n    return(\n        <div>\n            PROPOSALS\n        </div>\n    )\n}\n\n\nexport default Proposals;","import React from \"react\";\n\n\n\nconst Reviews = () => {\n\n\n    return(\n        <div>\n            REVIEWS\n        </div>\n    )\n}\n\n\nexport default Reviews;","import React, { useEffect, useContext, useState } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BrowserRouter as Router,\n    RouteComponentProps,\n    withRouter\n} from \"react-router-dom\";\n\n\nimport { ProposalDetails } from \".././context/UserContext\";\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: \"20px\"\n    },\n    title: {\n        marginBottom: \"20px\",\n        color: \"gray\"\n    },\n    container: {\n        marginLeft: \"30px\"\n    },\n    table: {\n\n    },\n    tableCellTitle: {\n        color: \"gray\"\n    },\n    card: {\n\n    },\n    media: {\n        height: 300,\n        margin: 0,\n        padding: 0 \n    },\n    cardTitle: {\n        color: \"gray\"\n    },\n    list: {\n        paddingLeft: \"20px\",\n    },\n    listItem: {\n        borderBottom: \"1px solid lightgray\",\n\n    },\n    listItemMainText: {\n        color: \"gray\"\n    },\n    listItemSecondaryText: {\n\n    }\n});\n\nconst initialProposalDetails: ProposalDetails = {\n    jobId: \"\",\n    date: \"\",\n    time: \"\",\n    text: \"\",\n    fixedPrice: false,\n    price: 1\n}\n\nconst CreateProposal = (props: RouteComponentProps) => {\n    const classes = useStyles();\n    const { jobsWithBoatDetails, selectedJobAdId, postProposal } = useContext(UserContext);\n    const [proposalDetails, setProposalDetails] = useState<ProposalDetails>(initialProposalDetails);\n    const [validProposalDetails, setValidProposalDetails] = useState(false);\n\n    useEffect(() => {\n        if (selectedJobAdId) {\n            setProposalDetails({ ...proposalDetails, jobId: selectedJobAdId });\n        }\n    }, [selectedJobAdId]);\n\n    useEffect(() => {\n        if (!proposalDetails || !proposalDetails.jobId || !proposalDetails.date || !proposalDetails.text || !proposalDetails.time || Number.isNaN(proposalDetails.price) || proposalDetails.price <= 0) {\n            setValidProposalDetails(false);\n        } else {\n            setValidProposalDetails(true);\n        }\n    }, [proposalDetails]);\n\n\n    const handleGoBackToJobAds = () => {\n        props.history.push(\"/user/jobads\");\n\n    }\n    const handleChangeFixedPrice = () => {\n        setProposalDetails({ ...proposalDetails, fixedPrice: !proposalDetails.fixedPrice })\n    }\n    const handleChangeProposalDetails = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        \n        if (proposalDetails) {\n            switch (e.target.name) {\n                case \"date\":\n                    setProposalDetails({ ...proposalDetails, date: e.target.value });\n                    break;\n                case \"time\":\n                    setProposalDetails({ ...proposalDetails, time: e.target.value });\n                    break;\n                case \"text\":\n                    setProposalDetails({ ...proposalDetails, text: e.target.value });\n                    break;\n                case \"price\":\n                    setProposalDetails({ ...proposalDetails, price: Number.parseInt(e.target.value)});\n                    break;   \n            }\n        }\n    }\n\n    const handleClickSubmitProposal = async () => {\n        if (proposalDetails && validProposalDetails) {\n            await postProposal(proposalDetails);\n            props.history.push(\"/user/jobads\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {jobsWithBoatDetails && jobsWithBoatDetails.filter(jobWithDetails => jobWithDetails.job._id === selectedJobAdId).map((jobWithBoatDetails) => (\n                <Grid container className={classes.container}>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            Create A Job Proposal\n                    </Typography>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper elevation={3}>\n                            <Grid container>\n                                <Grid item xs={5} md={5} lg={5} style={{ marginBottom: \"20px\" }}>\n                                    <p style={{ paddingLeft: \"36px\" }}>Job Overview</p>\n                                    <List dense aria-label=\"jobadsList\" className={classes.list}>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Boat Name\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.boat.name} />\n                                                </Grid>\n                                            </Grid>\n\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Boat Type\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.boat.boat_type} />\n                                                </Grid>\n                                            </Grid>\n\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Boat Location\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.boat.address} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Due Date\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.due_date} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Due Time\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.due_time} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Job Type\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.is_emergency ? \"Emergency\" : \"Normal\"} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Job Category\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.category} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Job Sub Category\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.subcategory} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Job Description\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.job.description} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <ListItem className={classes.listItem}>\n                                            <Grid container >\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary=\"Preffered Contact\" className={classes.listItemMainText} />\n                                                </Grid>\n                                                <Grid item xs={6} md={6} lg={6} >\n                                                    <ListItemText primary={jobWithBoatDetails.user_contact_details} />\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                    </List>\n\n                                </Grid>\n                                <Grid item xs={1} md={1} lg={1}></Grid>\n                                <Grid item xs={5} md={5} lg={5} style={{ marginTop: \"30px\" }}>\n                                    <Grid container>\n                                        <Grid item xs={6} md={6} lg={6} justify=\"center\">\n                                            <TextField\n                                                id=\"proposal-date\"\n                                                label=\"Date\"\n                                                type=\"date\"\n                                                name=\"date\"\n                                                error={!proposalDetails || !proposalDetails.date}\n                                                placeholder=\"Select Date\"\n                                                value={proposalDetails.date}\n                                                onChange={handleChangeProposalDetails}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={6} md={6} lg={6} justify=\"center\" >\n                                            <TextField\n                                                id=\"proposal-time\"\n                                                label=\"Time\"\n                                                type=\"time\"\n                                                name=\"time\"\n                                                value={proposalDetails.time}\n                                                error={!proposalDetails || !proposalDetails.time}\n                                                onChange={handleChangeProposalDetails}\n                                                placeholder=\"Select Time\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n                                    <Grid container style={{ marginTop: \"30px\" }}>\n                                        <TextField\n                                            id=\"proposal-text\"\n                                            multiline\n                                            fullWidth\n                                            rows={5}\n                                            variant=\"outlined\"\n                                            placeholder=\"Proposal Text\"\n                                            name=\"text\"\n                                            value={proposalDetails.text}\n                                            error={!proposalDetails || !proposalDetails.text}\n                                            onChange={handleChangeProposalDetails}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid container style={{ marginTop: \"10px\" }}>\n                                        <TextField\n                                            id=\"proposal-price\"\n                                            type=\"number\"\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            placeholder=\"Proposal Price\"\n                                            name=\"price\"\n                                            value={proposalDetails.price}\n                                            error={!proposalDetails || Number.isNaN(proposalDetails.price) || proposalDetails.price <= 0}\n                                            onChange={handleChangeProposalDetails}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid container style={{ marginTop: \"10px\" }}>\n\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={proposalDetails.fixedPrice}\n                                                    onChange={() => handleChangeFixedPrice()}\n                                                    name=\"fixedPrice\"\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"Price is Fixed\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={!proposalDetails.fixedPrice}\n                                                    onChange={() => handleChangeFixedPrice()}\n                                                    name=\"negociablePrice\"\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"Price is Negociable\"\n                                        />\n\n                                    </Grid>\n                                    <Grid container justify=\"center\" style={{ marginTop: \"20px\", }}>\n                                        <Button onClick={() => handleGoBackToJobAds()} style={{ backgroundColor: \"rgb(220, 219, 220)\", textTransform: \"none\", height: \"25px\", width: \"135px\", marginRight: \"10px\" }}>\n                                            Cancel\n                                        </Button>\n                                        <Button onClick={() => handleClickSubmitProposal()} color=\"primary\" variant=\"contained\" disabled={!validProposalDetails} style={{ textTransform: \"none\", height: \"25px\", width: \"135px\" }}>\n                                            Submit\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={1} md={1} lg={1}></Grid>\n                            </Grid>\n\n                        </Paper>\n                    </Grid>\n                </Grid>\n            ))}\n        </div>\n    )\n};\n\nexport default withRouter(CreateProposal);","import React, { useContext, useEffect, SyntheticEvent, useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from '@material-ui/lab/Alert';\nimport { UserContext, AppStateType } from \"../context/UserContext\";\n\n\nconst AppStateSnackbar = () => {\n  const {appState, resetAppState } = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setOpen(appState ? true : false);\n  });\n\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    resetAppState();\n    setOpen(false);\n  };\n  \n  return (\n    <React.Fragment>\n      {appState && (\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={handleClose}\n        >\n          <Alert severity={appState.type === AppStateType.SUCCESS ? \"success\" : \"error\"}>\n                 {appState.message}\n             </Alert>\n        </Snackbar>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AppStateSnackbar;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport {Login} from \"./components/Login\";\nimport UserProvider from \"./context/UserContext\";\nimport UserPanel from \"./components/UserPanel\";\nimport AppStateSnackbar from \"./components/AppStateSnackbar\";\n\nfunction App() {\n  return (\n    <div style={{height: \"100vh\", width: \"100vw\"}}>\n      <Router>\n        <UserProvider>\n        <AppStateSnackbar />\n          <Switch>\n              <Route exact path=\"/\" component={Login}/>\n              <Route path=\"/user\" component={UserPanel}/>\n              <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </UserProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}